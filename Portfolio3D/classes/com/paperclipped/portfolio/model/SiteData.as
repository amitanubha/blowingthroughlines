// Usage:	before using this template, rename the folder "projectname" to the//			correct project name. Then use find and replace to replace all //			instances of "projectname". Delete this comment when done.package com.paperclipped.portfolio.model{		import flash.utils.Dictionary;			public class SiteData	{		public static const	BASE_TITLE		:String = "LDa Architects LLP";		public static const BASE_ADDRESS	:String = "http://paperclipped.com"		static private  var _instance		:SiteData;		static private  var _data			:Object;				private var _main					:Portfolio3D;		private var _selected				:Object;		private var _currentURL				:String;		private var _maxProjects			:int;		private var _baseURL				:String;		// Get Sitewide Variables		public function get main()			:Portfolio3D	{	return _main;			}		public function get selected()		:Object			{	return _selected;		}		public function get currentURL()	:String			{	return _currentURL;		}														public function get maxProjects()	:Number			{	return _maxProjects;	}		public function get baseURL()		:String			{	return _baseURL;		}				// Set Sitewide Variables		public function set main(val:Portfolio3D):void		{	_main			= val;	}		public function set selected(val:Object):void		{	_selected		= val;	}		public function set currentURL(val:String):void		{	_currentURL		= val;	}		public function set maxProjects(val:Number):void	{	_maxProjects	= val;	}		public function set baseURL(val:String):void		{	_baseURL		= val;	}						// Constructor		public function SiteData(singletonEnforcer:SingletonEnforcer) {			if (singletonEnforcer == null)			{				throw new Error("Incorrect instantiation of singleton");			}						_maxProjects = 15; // prolly not needed anymore		}				public function parseItemXML(value:XML):void		{			// do the hustle		}				// Singleton Instantiation		public static function getInstance():SiteData		{			if (SiteData._instance == null)			{				SiteData._instance = new SiteData( new SingletonEnforcer());				_data = new Object();			}			return SiteData._instance;		}	}}class SingletonEnforcer{}