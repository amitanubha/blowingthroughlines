package com.paperclipped.utils{		import flash.display.Sprite;	import flash.display.Loader;	import flash.net.URLRequest;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.utils.Dictionary;	import flash.events.IOErrorEvent;	import flash.display.Bitmap;    import flash.display.BitmapData;		public class ImageLoader extends Sprite{				static var _imageDictionary:Dictionary;				private var _loader:Loader;		private var _url:String;				public function ImageLoader():void{			if(_imageDictionary == null) _imageDictionary = new Dictionary();			_loader = new Loader();			_loader.contentLoaderInfo.addEventListener(Event.COMPLETE, onLoadComplete);			_loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, onLoadProgress);			_loader.contentLoaderInfo.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler);					}						private function ioErrorHandler(evt:IOErrorEvent):void        {            trace(evt);        }				public function content():Bitmap		{			return Bitmap(_loader.content);		}				public function load(url:String):void{			_url = url;			if(_imageDictionary[url]==null){				_loader.load(new URLRequest(url));				addChild(_loader);			}else{				addChild(_imageDictionary[url]);				dispatchEvent(new ProgressEvent(ProgressEvent.PROGRESS, false, false, 1, 1));				dispatchEvent(new Event(Event.COMPLETE));			}		}				public function unload():void{			_loader.unload();			delete _imageDictionary[_url];			_url = null;		}				public function close():void{			_loader.close();		}				private function onLoadComplete(e:Event):void{			_imageDictionary[_url] = _loader.content;			dispatchEvent(new Event(Event.COMPLETE));		}				private function onLoadProgress(e:ProgressEvent):void{			dispatchEvent(e.clone());		}	}}